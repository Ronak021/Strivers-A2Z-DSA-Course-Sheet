class Solution {
    
    
  private:
  
    bool dfs(int node, int parent, vector<int> adj[], int vis[]){
      vis[node]=1;
      for(auto ele: adj[node]){
          
          if(!vis[ele]) {
              if(dfs(ele,node,adj,vis)) return true;
          }
          else if(ele!=parent) return true;
      }
      return false;
}
    
  public:
    bool isCycle(int V, vector<int> adj[]) {
        int vis[V]={0};
        queue<pair<int,int>> q;
        int parent=-1;
        for(int i=0; i<V; i++){
            
            
            if(!vis[i]){
                if(dfs(i, parent, adj, vis)) return true;
            }
        }
        
        return false;
    }
};
