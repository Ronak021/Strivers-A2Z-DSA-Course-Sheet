class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& pre) {
        
        int V=numCourses;
     
        // Create adjList
        vector<vector<int>> adj(V);
        for(int i=0; i<pre.size(); i++){
            adj[pre[i][0]].push_back(pre[i][1]);
        }

        // calculate indegrees
        vector<int> indeg(V);
        for(int i=0; i<V; i++){
            for(auto ele: adj[i]){
                indeg[ele]++;
            }
        }

        // push ele into the queue having 0 indeg
        queue<int> q;
        for(int i=0; i<V; i++){
            if(indeg[i]==0) q.push(i);
        }

        vector<int> ans;
        while(!q.empty()){
            int node=q.front();
            ans.push_back(node);
            q.pop();

            for(auto ele: adj[node]){
                indeg[ele]--;
                if(indeg[ele]==0) q.push(ele);
            }
        }

        if(ans.size()!=V) return false;
        return true;


    }
};
