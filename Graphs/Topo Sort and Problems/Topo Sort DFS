//Using DFS 
// class Solution
// {
//     private:
//     void dfs(int node, vector<int> &vis, vector<int> adj[], stack<int> &st){
//         vis[node]=1;
        
//         for(auto ele: adj[node]){
//             if(!vis[ele]){
//                 dfs(ele, vis, adj, st);
//             }
//         }
//         st.push(node);
//     }
// 	public:
// 	vector<int> topoSort(int V, vector<int> adj[]) 
// 	{
// 	    vector<int> vis(V,0);
// 	    stack<int> st;
	    
// 	    for(int i=0; i<V; i++){
// 	        if(!vis[i]){
// 	            dfs(i,vis, adj, st);
// 	        }
// 	    }
	       
// 	   vector<int> ans;
// 	    while(!st.empty()){
// 	        ans.push_back(st.top());
// 	        st.pop();
// 	    }
	    
	    
// 	    return ans;
// 	}
// };
