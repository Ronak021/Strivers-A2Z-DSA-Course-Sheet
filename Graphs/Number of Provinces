class Solution {

private:
    void dfs(int node, vector<int> &vis, vector<vector<int>> &adj,int n){

        vis[node]=1;

        for(int j=0; j<n; j++){

            if(adj[node-1][j]==1 && vis[j+1]!=1){
                dfs(j+1, vis, adj, n);
            }
        }
    }


public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        
        int n=isConnected.size();
        vector<int> vis(n+1, 0); 


        int count=0;
        for(int i=1; i<=n; i++){

            if(!vis[i]){
                count++;
                dfs(i, vis, isConnected, n);
            }

        }
       
        return count;

    }
};
