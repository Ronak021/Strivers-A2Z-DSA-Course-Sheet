
#include <bits/stdc++.h>
using namespace std;

class Solution {
  public:
  
    vector<int> bfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        int vis[V]={0};
    
        
        queue <int> q;
        q.push(0);
        
        
        vector <int> bfs;
        
        while(!q.empty()){
            
            int x= q.front();
            vis[x]=1;
            for(int i=0; i<adj[x].size(); i++){
                
                int ele=adj[x][i];
                if(!vis[ele]){
                    vis[ele]=1;
                    q.push(ele);
                }
            }
            bfs.push_back(q.front());
            q.pop();
           
        }
        
        return bfs;
    }
};


int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int V, E;
        cin >> V >> E;

        vector<int> adj[V];

        for (int i = 0; i < E; i++) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
            // 		adj[v].push_back(u);
        }
        // string s1;
        // cin>>s1;
        Solution obj;
        vector<int> ans = obj.bfsOfGraph(V, adj);
        for (int i = 0; i < ans.size(); i++) {
            cout << ans[i] << " ";
        }
        cout << endl;
    }
    return 0;
}
