class Solution {
  public:
	void shortest_distance(vector<vector<int>>&matrix){
	  
	  
	  
	  int n = matrix.size();
	  int m=matrix[0].size();
	  
	      for(int i=0; i<n; i++){
	        for(int j=0; j<n; j++){
	            if(matrix[i][j]==-1){
	                matrix[i][j]=1e9;
	            }
	        }
	    }

	  // floyd
	  for(int via=0; via<n; via++){
	      for(int i=0; i<n; i++){
	          for(int j=0; j<n; j++){
	              
	             
	              int cost = matrix[i][via] + matrix[via][j];
	              matrix[i][j] = min(cost, matrix[i][j]);
	          }
	      }
	  }
	  for(int i=0; i<n; i++){
	        for(int j=0; j<n; j++){
	            if(matrix[i][j]==1e9){
	                matrix[i][j]=-1;
	            }
	        }
	    }
	  
	  
	}
};
