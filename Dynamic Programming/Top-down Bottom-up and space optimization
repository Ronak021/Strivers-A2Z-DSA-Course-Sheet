class Solution {
    
  private:
    long long int fun(int n, vector<long long int> &dp){
        
        if(n<=1) return n;
        if(dp[n]!=-1)  return dp[n];
        return dp[n] = (fun(n-1, dp) + fun(n-2, dp)) % mod;
    }
  public:
    int mod=1000000007;
    long long int topDown(int n) {
        
        vector<long long int> dp(n+1, -1);
        long long int ans=fun(n, dp);
        
        return ans;
        
    }
    long long int bottomUp(int n) {
        
        vector<long long int> dp(n+1);
       
        dp[0]=0;
        dp[1]=1;
        
        for(int i=2; i<=n; i++){
            dp[i]=(dp[i-1]+dp[i-2])%mod;
        }
        return dp[n];
    }
};
