class Solution {
    
    
private:
int fun(int i, int  j1, int j2, int r, int c, vector<vector<int>>& grid, vector<vector<vector<int>>> &dp){
    
    if(j1<0 || j2<0 || j1>=c || j2>=c) return -1e8; // if crroses the bounndries.
    
    if(i==r-1) {
        // if both are in same cell only 1 will take.
        if(j1==j2) return grid[i][j1];
        else // both will take it
        return grid[i][j1] + grid[i][j2];
    }
    
    
    if(dp[i][j1][j2]!=-1) return dp[i][j1][j2];
    // now for each 1 movement of robot 1 , robot 2 can do
    // 3 movements (either down, dLeft, dRight)
    int maxi = 0;
    for(int rob1= -1; rob1<=1; rob1++){
        for(int rob2=-1; rob2<=1; rob2++){
            int value=0;
            if(j1==j2) value = grid[i][j1];
            else value = grid[i][j1] + grid[i][j2];
            value += fun(i+1, j1+rob1, j2+rob2, r, c, grid, dp);
            maxi=max(maxi, value);
        }
    }
    
    return dp[i][j1][j2] = maxi;
}
