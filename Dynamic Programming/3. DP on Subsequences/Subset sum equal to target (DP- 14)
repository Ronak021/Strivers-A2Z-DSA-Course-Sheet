// class Solution{  
    
// int knapsack(int idx, int sum, vector<int>arr,  vector<vector<int>> &dp){
//     if(sum==0) return 1;
//     if(idx==0) {
//         if(arr[idx]==sum) return 1;
//         return 0;
//     }
    
//     if(dp[idx][sum]!=-1) return dp[idx][sum];
    
//     int notTake = knapsack(idx-1, sum, arr,  dp);
//     int take=0;
//     if(arr[idx]<=sum) take = knapsack(idx-1, sum-arr[idx], arr, dp);
    
//     return dp[idx][sum] = take || notTake;
    
// }

// public:
//     bool isSubsetSum(vector<int>arr, int sum){
        
//         int n=arr.size();
//         vector<vector<int>> dp(n+1, vector<int> (sum+1, -1));
//         return knapsack(n-1, sum, arr, dp);
//     }
// };
