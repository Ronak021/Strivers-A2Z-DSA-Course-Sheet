class Solution {
private:
    int fun(int idx, int amount, vector<int>& arr, vector<vector<int>>& dp){

        if(idx==0) {
            if(amount%arr[0] == 0 )
            return 1;
            else return 0;
        }

        if(dp[idx][amount]!=-1) return dp[idx][amount];
        int take = 0;
        if(arr[idx] <= amount) take = fun(idx, amount-arr[idx], arr, dp);
        int nottake = fun(idx-1, amount, arr, dp);

        return dp[idx][amount] = take +  nottake;
    }
public:
    int change(int amount, vector<int>& coins) {
           int n=coins.size();
        vector<vector<int>> dp(n, vector<int>(amount+1, -1));
        int ans= fun(n-1, amount, coins, dp);
        if(ans!=1e9) return ans;
        return -1;
    }
};
