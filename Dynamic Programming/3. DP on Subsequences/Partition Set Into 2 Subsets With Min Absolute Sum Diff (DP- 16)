// this solution will only work for + integers.
class Solution {
public:

    int minimumDifference(vector<int>& arr) {
        int n = arr.size();
       
        int sum = 0;
        for (int i : arr)
            sum += i;


        vector<vector<bool>> dp(n, vector<bool>(sum+1,0)); // intialiy all false
        for(int i=0; i<n; i++) dp[i][0]=true; // sum==0
        
        
        if(arr[0] <= sum) dp[0][arr[0]] = true; // i==0 and arr[idx]=sum
    
        for(int idx=1; idx<n; idx++){
            for(int target=1; target<=sum; target++){
                
                    bool notTake = dp[idx-1][target];
                    bool take=false;
                    if(arr[idx]<=target) take = dp[idx-1][target-arr[idx]];
                    dp[idx][target] = take || notTake;
            }
        }

        int mini=INT_MAX;
        for(int i=0; i<=sum; i++){
            if(dp[n-1][i]==true){
                int s1 = i;
                int s2=sum-i;
                mini=min(mini, abs(s1-s2));
            }
        }

        return mini;

    }
};
