class Solution {
    
private:

    void fun(int n, vector<int> &arr, vector<int> &dp){
        
          for(int ind=0; ind<n; ind++){
            for(int prev=0; prev<=ind-1; prev++){

                if(arr[prev] < arr[ind]) {
                    dp[ind] = max(dp[ind], 1+dp[prev]);
                  
                }
            }
        }
        
    }
  public:
    int LongestBitonicSequence(int n, vector<int> &arr) {
        
        vector<int> dp1(n, 1), dp2(n,1);

        
        
       
        fun(n, arr,dp1);  // forward LIS
     
        reverse(arr.begin(), arr.end());
        
        fun(n,arr, dp2);  // backward LIS
        reverse(dp2.begin(), dp2.end());
  
        int maxi=0;
        for(int i=0; i<n; i++){
            
            if(dp1[i]>1 && dp2[i]>1)
            maxi=max(maxi, dp1[i]+dp2[i]-1);
        }
        
    
        return maxi;

     
    }
};
