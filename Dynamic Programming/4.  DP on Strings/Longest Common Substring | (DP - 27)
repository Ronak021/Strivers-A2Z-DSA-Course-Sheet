class Solution{
    
private:
    int fun(int i, int j, string &text1, string &text2, vector<vector<int>> &dp, int &maxLen) {
        if (i < 0 || j < 0) return 0;

        if (dp[i][j] != -1) return dp[i][j];

        if (text1[i] == text2[j]) {
            dp[i][j] = 1 + fun(i - 1, j - 1, text1, text2, dp, maxLen);
            maxLen = max(maxLen, dp[i][j]);
        } else {
            dp[i][j] = 0;  // when noot match
        }
        
        
        // explore the other posibilitiess
        fun(i - 1, j, text1, text2, dp, maxLen);
        fun(i, j - 1, text1, text2, dp, maxLen);

        return dp[i][j];
    }
    
    public:
    int longestCommonSubstr (string text1, string text2, int n, int m)
    {
        vector<vector<int>> dp(n, vector<int>(m, -1));
        int maxLen = 0;
        fun(n - 1, m - 1, text1, text2, dp, maxLen);
        return maxLen;
    }
};
