class Solution {

private : 

    int fun(int ind1, int ind2,string &s1, string &s2, vector<vector<int>> &dp){

        if(ind1<0 || ind2<0) return 0;
        if(dp[ind1][ind2]!=-1) return dp[ind1][ind2];
        if(s1[ind1] == s2[ind2]) 
            return dp[ind1][ind2] = 1+fun(ind1-1, ind2-1, s1, s2, dp);
        return dp[ind1][ind2] = max(fun(ind1-1, ind2, s1, s2, dp), fun(ind1, ind2-1, s1, s2, dp));
    }

public:
    int minDistance(string s1, string s2) {
        

        int n=s1.length();
        int m = s2.length();
   
        vector<vector<int>> dp(s1.length(), vector<int>(s2.length()+1, -1));


        int lcs =fun(n-1, m-1, s1, s2, dp);

        int ans;
        return  ans = (n-lcs) + (m-lcs);
    }
};
