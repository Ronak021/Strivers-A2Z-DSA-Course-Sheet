class Solution {
private:
    void sum(int idx, int target, vector<int>& can, vector<int>& ans, vector<vector<int>> &store){
        if(target==0){
            store.push_back(ans);
            return;
        }
        for(int i=idx; i<can.size(); i++){
            if(i>idx && can[i]==can[i-1]) continue;
            if(can[i] > target) break;
            ans.push_back(can[i]);
            sum(i+1, target-can[i], can,ans, store);
            ans.pop_back();
        }
    }
public:
    vector<vector<int>> combinationSum2(vector<int>& can, int target) {
   
        sort(can.begin(), can.end());
        vector<vector<int>> store;


        vector<int> ans;
        sum(0, target, can, ans, store);
       
        return store;
    }
};
