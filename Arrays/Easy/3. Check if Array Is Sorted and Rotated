class Solution {
public:
    bool check(vector<int>& arr) {
        
        int c=0;
        int n=arr.size();

        //We need to find how many times, the array is breaking the ascending order
        // If it is breaking just once then it or it does't break even once then it is sorted
        for(int i=0; i<n-1; i++){
            if(arr[i]>arr[i+1]) c++;
        }

        // when its rightly rotated then it will satisfied
        // for eg, [3,4,5,1,2] -> properly rotated so 3 > 2
        // but for [2,1,3,4]  -> not
        if(arr[n-1]>arr[0]) c++;

        return c<=1;
    
}
};


// T.c = O(n)
